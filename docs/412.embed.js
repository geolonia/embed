(self.webpackChunk_geolonia_embed=self.webpackChunk_geolonia_embed||[]).push([[412],{8714:function(e,t,o){"use strict";o.r(t);var i=o(6158),l=o.n(i),s=o(9319),n=o.n(s),r=o(1423),a=o(1036),c=o.n(a);function u(e,t){for(var o=0;o<t.length;o++){var i=t[o];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}const p="#000000",g="#FFFFFF",y="rgba(255, 0, 0, 0.4)",m="#FFFFFF";let d=function(){function e(t,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.json=t,this.options={cluster:!0,heatmap:!1,clusterColor:"#ff0000",...o}}var t,o;return t=e,(o=[{key:"addTo",value:function(e){const t=this.json.features,o=t.filter((e=>"point"!==e.geometry.type.toLowerCase())),i=t.filter((e=>"point"===e.geometry.type.toLowerCase()));e.addSource("geolonia-simple-style",{type:"geojson",data:{type:"FeatureCollection",features:o}}),this.setPolygonGeometries(e),this.setLineGeometries(e),e.addSource("geolonia-simple-style-points",{type:"geojson",data:{type:"FeatureCollection",features:i},cluster:this.options.cluster,clusterMaxZoom:14,clusterRadius:50}),e.addLayer({id:"geolonia-simple-style-polygon-symbol",type:"symbol",source:"geolonia-simple-style",filter:["==","$type","Polygon"],paint:{"text-color":["string",["get","text-color"],p],"text-halo-color":["string",["get","text-halo-color"],g],"text-halo-width":1},layout:{"text-field":["get","title"],"text-font":["Noto Sans Regular"],"text-size":12,"text-max-width":12,"text-allow-overlap":!1}}),e.addLayer({id:"geolonia-simple-style-linestring-symbol",type:"symbol",source:"geolonia-simple-style",filter:["==","$type","LineString"],paint:{"text-color":["string",["get","text-color"],p],"text-halo-color":["string",["get","text-halo-color"],g],"text-halo-width":1},layout:{"symbol-placement":"line","text-field":["get","title"],"text-font":["Noto Sans Regular"],"text-size":12,"text-max-width":12,"text-allow-overlap":!1}}),this.setPointGeometries(e),this.setCluster(e);const l=e.getContainer();if(!l.dataset||!l.dataset.lng&&!l.dataset.lat){const t=n()(this.json);e.fitBounds(t,{duration:0,padding:30})}}},{key:"setPolygonGeometries",value:function(e){e.addLayer({id:"geolonia-simple-style-polygon",type:"fill",source:"geolonia-simple-style",filter:["==","$type","Polygon"],paint:{"fill-color":["string",["get","fill"],y],"fill-opacity":["number",["get","fill-opacity"],1],"fill-outline-color":["string",["get","stroke"],m]}}),this.setPopup(e,"geolonia-simple-style-polygon")}},{key:"setLineGeometries",value:function(e){e.addLayer({id:"geolonia-simple-style-linestring",type:"line",source:"geolonia-simple-style",filter:["==","$type","LineString"],paint:{"line-width":["number",["get","stroke-width"],2],"line-color":["string",["get","stroke"],y],"line-opacity":["number",["get","stroke-opacity"],1]},layout:{"line-cap":"round","line-join":"round"}}),this.setPopup(e,"geolonia-simple-style-linestring")}},{key:"setPointGeometries",value:function(e){e.addLayer({id:"circle-simple-style-points",type:"circle",source:"geolonia-simple-style-points",filter:["!",["has","point_count"]],paint:{"circle-radius":["case",["==","small",["get","marker-size"]],7,["==","large",["get","marker-size"]],13,9],"circle-color":["string",["get","marker-color"],y],"circle-opacity":["number",["get","fill-opacity"],1],"circle-stroke-width":["number",["get","stroke-width"],1],"circle-stroke-color":["string",["get","stroke"],m],"circle-stroke-opacity":["number",["get","stroke-opacity"],1]}}),e.addLayer({id:"symbol-simple-style-points",type:"symbol",source:"geolonia-simple-style-points",filter:["!",["has","point_count"]],paint:{"text-color":["string",["get","text-color"],p],"text-halo-color":["string",["get","text-halo-color"],g],"text-halo-width":1},layout:{"icon-image":["case",["==","large",["get","marker-size"]],["image",["concat",["get","marker-symbol"],"-15"]],["image",["concat",["get","marker-symbol"],"-11"]]],"text-field":["get","title"],"text-font":["Noto Sans Regular"],"text-size":12,"text-anchor":"top","text-max-width":12,"text-offset":["case",["==","small",["get","marker-size"]],["literal",[0,.6]],["==","large",["get","marker-size"]],["literal",[0,1.2]],["literal",[0,.8]]],"text-allow-overlap":!1}}),this.setPopup(e,"circle-simple-style-points")}},{key:"setPopup",value:function(e,t){e.on("click",t,(t=>{const o=(0,r.Z)(t.features[0]).geometry.coordinates,i=t.features[0].properties.description;i&&(new(l().Popup)).setLngLat(o).setHTML(c()(i)).addTo(e)})),e.on("mouseenter",t,(t=>{t.features[0].properties.description&&(e.getCanvas().style.cursor="pointer")})),e.on("mouseleave",t,(()=>{e.getCanvas().style.cursor=""}))}},{key:"setCluster",value:function(e){e.addLayer({id:"clusters",type:"circle",source:"geolonia-simple-style-points",filter:["has","point_count"],paint:{"circle-radius":20,"circle-color":this.options.clusterColor,"circle-opacity":1}}),e.addLayer({id:"cluster-count",type:"symbol",source:"geolonia-simple-style-points",filter:["has","point_count"],layout:{"text-field":"{point_count_abbreviated}","text-size":14,"text-font":["Noto Sans Regular"]}}),e.on("click","clusters",(function(t){const o=e.queryRenderedFeatures(t.point,{layers:["clusters"]}),i=o[0].properties.cluster_id;e.getSource("geolonia-simple-style-points").getClusterExpansionZoom(i,(function(t,i){t||e.easeTo({center:o[0].geometry.coordinates,zoom:i})}))})),e.on("mouseenter","clusters",(function(){e.getCanvas().style.cursor="pointer"})),e.on("mouseleave","clusters",(function(){e.getCanvas().style.cursor=""}))}}])&&u(t.prototype,o),e}();t.default=d},2868:function(){},5574:function(){},4777:function(){},9830:function(){},209:function(){},7414:function(){}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,