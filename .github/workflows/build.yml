# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: build

on:
  push:
    branches: ['*']
    tags: ['*']
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['12.x', '14.x']
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: modules-cache-v1-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - run: npm install
      - run: npm run lint
      - run: npm test
      - run: npm run build
      - name: save the built
        uses: actions/upload-artifact@v2
        if: "!failure()"
        with:
          retention-days: 1
          name: the-built
          path: |
            dist/
            docs/

  snapshot-test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-node@v1
          with:
            node-version: '14.x'
        - name: Cache node_modules
          uses: actions/cache@v2
          with:
            path: node_modules
            key: modules-cache-v1-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
        - run: npm install
        - run: "npm run build:embed"
        - name: Build and push to local registry
          uses: docker/build-push-action@v2
          with:
            context: .
            push: false
            tags: geolonia/embed
        - run: |
            docker run --rm \
              -v $(pwd)/snapshots:/app/snapshots \
              -v $(pwd)/dist:/app/dist \
              geolonia/embed

  gh-pages:
    name: 'Host with GitHub Pages'
    runs-on: ubuntu-latest
    needs:
      - build
      - snapshot-test
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Clean repo
        run: |
          git checkout --orphan gh-pages
          git rm -rf . > /dev/null 2>&1
      - name: load the built
        uses: actions/download-artifact@v2
        with:
          name: the-built
      - name: Setup and deploy Github Pages
        run: |
          rm -rf dist
          mv docs/* .
          git config user.name "$GITHUB_ACTOR"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git add . > /dev/null 2>&1
          git commit -m "Deploy" > /dev/null 2>&1
          git push --force origin gh-pages

  publish:
    name: 'Publish npm package'
    runs-on: ubuntu-latest
    needs:
      - build
      - snapshot-test
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          tag_name: 'v%s'
          node-version: '14.x'
          registry-url: 'https://registry.npmjs.org'
          scope: '@geolonia'
      - name: load the built
        uses: actions/download-artifact@v2
        with:
          name: the-built
      - name: 'Publish to NPM (latest)'
        if: "!contains(github.ref, '-pre.')"
        run: npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: 'Publish to NPM (next)'
        if: "contains(github.ref, '-pre.')"
        run: npm publish --access=public --tag=next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
